/*--------------------------------*- C++ -*---------------------------------*\ 
| ========                 |                                                 | 
| \      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           | 
|  \    /   O peration     | Version:  v1812                                 | 
|   \  /    A nd           | Web:      www.OpenFOAM.com                      | 
|    \/     M anipulation  |                                                 | 
\*--------------------------------------------------------------------------*/ 
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      adjointDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

flowOptions
{
    flowCondition          Incompressible;
    setFlowBCs             true;
    flowBCs                { bc0 {patch inout; variable U; value (9.961946980917455 0.8715574274765816 0);} useWallFunction true; }
    inletPatches           (inout);
    outletPatches          (inout);
    derivUInInfo           {stateName U; component 0; type fixedValue;patchNames (inlet ); }
    userDefinedPatchInfo   { }
    userDefinedVolumeInfo  { }
    referenceValues        (magURef 1.000000e+01 ARef 2.754000e-01 LRef 3.000000e-01 pRef 0.000000e+00 rhoRef 1.000000e+00 );
    divDev2                true;
    useNKSolver            false;
    nkSegregatedTurb       false;
    nkSegregatedPhi        false;
    nkRelTol               1.000000e-08;
    nkAbsTol               1.000000e-12;
    nkSTol                 1.000000e-08;
    nkEWRTol0              0.300000;
    nkEWRTolMax            0.700000;
    nkPCLag                1;
    nkMaxIters             100;
    nkMaxFuncEvals         10000;
    nkASMOverlap           1;
    nkGlobalPCIters        0;
    nkLocalPCIters         1;
    nkPCFillLevel          0;
    nkJacMatReOrdering     rcm;
    nkGMRESMaxIters        500;
    nkGMRESRestart         500;
}

adjointOptions
{
    solveAdjoint           false;
    useColoring            false;
    normalizeResiduals     (URes pRes nuTildaRes);
    normalizeStates        ();
    nFFDPoints             0;
    correctWallDist        true;
    reduceResCon4JacMat    false;
    calcPCMat              true;
    fastPCMat              false;
    delTurbProd4PCMat      false;
    writeMatrices          false;
    adjGMRESCalcEigen      false;
    adjGMRESMaxIters       1000;
    adjGMRESRestart        200;
    adjASMOverlap          1;
    adjJacMatOrdering      state;
    adjJacMatReOrdering    rcm;
    adjGlobalPCIters       0;
    adjLocalPCIters        1;
    adjPCFillLevel         0;
    adjGMRESRelTol         1.000000e-06;
    adjGMRESAbsTol         1.000000e-16;
    minTolJac              1.000000e-14;
    maxTolJac              1.000000e+14;
    minTolPC               1.000000e-14;
    maxTolPC               1.000000e+14;
    stateResetTol          1.000000e-06;
    tractionBCMaxIter      20;
    epsDeriv               1.000000e-05;
    epsDerivFFD            1.000000e-03;
    epsDerivXv             1.000000e-07;
    epsDerivUIn            1.000000e-05;
    epsDerivVis            1.000000e-08;
    stateScaling           ();
    residualScaling        ();
    maxResConLv4JacPCMat   ( URes 2 pRes 2 p_rghRes 2 phiRes 1 nuTildaRes 2 kRes 2 omegaRes 2 epsilonRes 2 ReThetatRes 2 gammaIntRes 2 TRes 2 eRes 2 GRes 2 DRes 2);
    adjDVTypes             (FFD);
}

actuatorDiskOptions
{
    actuatorActive         0;
    actuatorAdjustThrust   0;
    actuatorVolumeNames    ();
    actuatorThrustCoeff    ();
    actuatorPOverD         ();
    actuatorRotationDir    ();
}

objectiveFunctionOptions
{
    objFuncs               (CD CL);
    objFuncGeoInfo         (  (wing)  (wing) );
    dragDir                (0.9961946981 0.0871557427 0.0000000000 );
    liftDir                (-0.0871557427 0.9961946981 0.0000000000 );
    CofR                   (0.0000000000 0.0000000000 0.0000000000 );
    rotRad                 (0.0000000000 0.0000000000 0.0000000000 );
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
